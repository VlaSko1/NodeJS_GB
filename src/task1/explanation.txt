Решение задачи №1.

При запуске файла ./src/task1/index.js на исполнение в node.js происходит следующее:
1. Запускается цикл событий, который проходит первые три фазы (пока ничего не запланировано) 
и доходит до фазы "poll". В этой фазе начинается выполнение синхронного кода.

2. Выполняется первая строчка кода и в консоль выводится 'Record 1'.

3. Далее происходит регистрация таймера на строчке 3, второго аргумента таймера нет, 
поэтому его колбэк сразу перемещается в очередь колбэков для фазы таймеров. 
Синхронный код продолжает выполняться.

4. На строке 15 выполнятся вывод в консоль 'Record 5'.

5. На строке 17 у нас промис, который тут же резолвится - это микрозадача, которая сразу 
отправляется в очередь микрозадач.

6. Выполнение синхронного кода завершается и прежде, чем приступить к выполнению следующей 
фазы цикла событий интерпретатор выполняет колбэки из очереди микрозадач.

7. У нас есть одна задача в очереди микрозадач, она тут же добавляет следующую задачу 
в очередь микрозадач (еще один промис резолвится), здесь мы получаем синхронную фукцию,
которая возвращает консоль лог - в консоле выводится 'Record 6'.

8. Наконец очередь микрозадач пуста. Интерпретатор проходит фазы "check" и "close callbacks" 
и доходит до фазы таймеров ("timers"), где ожидает выполнения один колбэк запущенный функцией 
setTimeout на третьей строчке. 

9. Происходит синхронное выполнение данного колбэка: сначала выполняется вывод в консоль 'Record 2' 
из 4 строчки, затем резолвится промис и его колбэк перемещается в очередь микрозадач.

10. Выполнение фазы таймеров завершается и интерпретатор переходит к выполнению очереди микрозадач.
В данной очереди у нас один колбэк, который запускает выполнение функции setTimeout без второго 
аргумента, поэтому после завершения всех фаз текущего tick'a в фазе таймеров своего выполнения 
уже будет ожидать колбэк функции setTimeout с 6 строки. 

11. Синхронное выполнение колбэка выводит в консоль 'Record 3' (7 строка кода), а затем добавляет 
в очередь микрозадач вызов функции then() промиса из 8 строки кода. На этом фаза таймеров завершается.

12. После завершения фазы таймеров интерпретатор приступает к выполнению очереди микрозадач, 
выводя в консоль 'Record 4' (9 строка кода). Выполнение программы завершается. 